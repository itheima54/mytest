<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--
        集成springSecurity：
            1.pom.xml引入依赖
            2.web.xml配置security的代理过滤器
            3.在springmvc.xml
                a.配置公开资源，不需要权限即可访问
                b.受到访问限制的拦截处理方式
                c.认证
    -->

    <!--
        配置拦截策略：
        pattern="/images/**"：配置路径
        security="none"：表示不限制访问
    -->
    <security:http security="none" pattern="/images/**"/>
    <security:http security="none" pattern="/login.html"/>
    <security:http security="none" pattern="/fail.html"/>


    <!--
        auto-config="true":springSecurity自动配置
            自动配置登录页面
            自动配置拦截后跳转页面为登录页面
            自动配置登录的提交地址

        use_expressions="false"：表示是否使用SPEL表达式
    -->
    <security:http auto-config="true" use-expressions="true">

        <!--
            pattern="/**"
                指定需要限制访问的路径,除了上面配置的路径，其他路径都受到权限控制。
            access="ROLE_USER"
                指定能访问的角色为ROLE_USER
        -->
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

        <!--
            自定义登录
            login-page指定登录页面
            authentication-failure-url:指定验证失败路径
            default-target-url：指定登录成功后默认跳转地址
                    ,用户直接访问登录页面登录成功后跳转，
                    如果不是直接访问，那么登录成功后会跳回之前被拦截的地址
            login-processing-url：指定登录处理地址，security内置地址
        -->
        <security:form-login
            login-page="/login.html"
            authentication-failure-url="/fail.html"
            default-target-url="success.html"
            login-processing-url="/login"
        />

        <!--
            配置登出地址
            logout-utl：指定登出处理地址，logout为security内置地址
            logout-success-url:配置登出成功跳转地址

        -->
        <security:logout
            logout-url="/logout"
            logout-success-url="/login.html"

        />
    </security:http>

    <!--
        认证：配置用户账户和密码和对应的角色信息
    -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="admin" password="{noop}admin" authorities="ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--
        配置mvc注解驱动和静态资源过滤
    -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
</beans>